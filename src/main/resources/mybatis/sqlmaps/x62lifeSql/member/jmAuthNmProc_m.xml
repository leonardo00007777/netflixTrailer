<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jmAuthNmProc">
    <select id="jmAuthNmProc" statementType="CALLABLE">
        {CALL encryptionOpen
          SELECT e.grpcd
               , g.grpname
               , e.gradecd
               , ISNULL(e.initpoint,0) initpoint
               , ISNULL(e.nodeductpay,'N') nodeductpay
               , ISNULL(e.joinyn,'N') joinyn
               , e.retiredt  /*휴직자도 인증가능, 값이 있을 경우 소속사휴직 상태로 하기 위함.*/
          FROM mb_grpemp e
            JOIN mb_group g ON e.grpcd = g.grpcd
           WHERE e.empnum = #{strEmpNum}
             AND e.empname = #{strMEMName}
             AND CONVERT(VARCHAR(40),DECRYPTBYKEY(e.email_enc)) = #{strEmpEmail}
             AND (CONVERT(VARCHAR(40),DECRYPTBYKEY(e.email_enc)) = #{strEmpEmail}
                  OR CONVERT(VARCHAR(40),DECRYPTBYKEY(e.hpno_enc)) = #{strCellNo})
        CALL encryptionClose}
    </select>
    <select id="jmAuthNmEmployee">
        SELECT memcd
        FROM mb_master
         WHERE empnum = #{strEmpNum}
           AND memname = #{strMemName}
    </select>

    <update id="jmAuthDone">
        /*  rCount = 0 */
        UPDATE mb_master
           SET grpcd = #{strGRPCD}
             , gradecd = #{strGradeCD}
             , empnum = #{strEmpNum}
           <choose>
               <when test="strLayOffTime== ''">
                   , memstcd = #{memstUp}
               </when>
               <otherwise>
                   , memstcd = #{memstLayoff}
               </otherwise>
           </choose>
           , upgradedt = GETDATE()
           , updid = #{strLoginMEMCD}
           , nodeductpay = #{strNoDeductPay}
           , gender = #{strGender}
           , residentno1_enc = ENCRYPTBYKEY(KEY_GUID(#{encKeyName}), #{strResidentNo1})
           , pcert_reqno = #{strReqNo}
           , pcert_di = #{strPidNo}
            WHERE memcd = #{strLoginMEMCD}
    </update>

    <update id="jmAuthDoneProc" statementType="CALLABLE">
        {CALL encryptionOpen
          UPDATE mb_grpemp
             SET joinyn = 'Y'
           WHERE grpcd = #{strGRPCD}
             AND gradecd = #{strGradeCD}
             AND empnum = #{strEmpNum}
             AND CONVERT(VARCHAR(40),DECRYPTBYKEY(email_enc)) = #{strEmpEmail}
             AND (CONVERT(VARCHAR(40),DECRYPTBYKEY(email_enc)) = #{strEmail}
                  OR CONVERT(VARCHAR(40),DECRYPTBYKEY(hpno_enc)) = #{strCellNo})
             AND retiredt IS NULL   /*  '20160909 sykim 휴직자도 가능하도록.*/
             AND (CASE WHEN ISNULL(joinyn,'')='' THEN 'N' ELSE joinyn END) = 'N'
        CALL encryptionClose}
    </update>
    
    <select id="searchYearPoint">
        /*
            xCount = 0
            '최초 가입 승인일 경우, 포인트를 부여함
            '오랫동안 사용하지 않아 자동탈퇴된 고객의 재 가입일 경우 허용, 초기포인트는 자동으로 부여하지 않는다. (20160622)
            If rCount > 0 And strJoinYn = "N" Then

            strMEMSTCD = ""
            lngMEMPntMax = 0
            strMEMPntYN = "N"

            '개인별 부여 포인트가 존재하면 개인별 포인트를 처음 부여함.
             If lngInitPoint > 0 Then
            '초기인증 포인트적립은 해당연도에 1번만 부여받도록 재검증처리 후 포인트 부여(20101228 현재)
        */
        SELECT COUNT(1) xCount
          FROM mb_point
         WHERE YEAR(indt) = YEAR(GETDATE())
           AND rscd = '01'
           AND memcd = #{strLoginMEMCD}
    </select>

    <select id="getMemberGroupPoint">
        SELECT a.memstcd
             , CASE WHEN a.gradecd = #{gradV}{THEN ISNULL(b.pntmax01,0)
                    WHEN a.gradecd = #{gradeB} THEN ISNULL(b.pntmax02,0)
                    WHEN a.gradecd = #{gradeA} THEN ISNULL(b.pntmax03,0)
                    ELSE 0
               END pntmax
             , CASE WHEN a.gradecd = #{gradeC} THEN b.pntyn01
                    WHEN a.gradecd = #{gradeB} THEN b.pntyn02
                    WHEN a.gradecd = #{gradeA} THEN b.pntyn03
                    ELSE 'N'
               END pntyn
        FROM mb_master a
          LEFT JOIN mb_group b ON b.grpcd = a.grpcd
        WHERE a.memcd = #{strLoginMEMCD}
    </select>

</mapper>