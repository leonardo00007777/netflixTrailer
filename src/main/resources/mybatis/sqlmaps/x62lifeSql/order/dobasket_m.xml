<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dobasket">
<!--    '20170306 hwkim docart.asp 에서 copy 후 새로 작성
    '
    '20200324 sykim 상품정보 단일화(gd_master & od_reservegoods > gd_master) 적용.-->
    <select id="searchExistCategory">
       /* searchExistCategory 각 카테고리 별 존재하는 상품인지 검사*/
        SELECT m.gdcd
        FROM gd_master m
          LEFT JOIN gd_cnt c
                 ON m.gdcd = c.gdcd
        WHERE m.gdcd = #{strGDCD}
          AND m.useyn = 'Y'
          <![CDATA[
          AND ISNULL(c.gdcnt,99999) >= #{strGDCNT}
        ]]>
    </select>
    <select id="alreadyInCart">
        /* alreadyInCart 장바구니에 담겨있는 상품인지 아닌지 검사*/
        SELECT crtidx
             , gdcnt
        FROM shopping_basket
         WHERE memcd = #{strLoginMemCd}
           AND gdcd = #{strGDCD}
           AND od_gubun = #{strCartODTYPE}
    </select>

    <insert id="addProdIntoCart">
         /*addProdIntoCart 장바구니에 없는 상품이라면*/
        INSERT INTO shopping_basket (
                                      memcd
                                    , crtidx
                                    , gdcd
                                    , gdcnt
                                    , indt
                                    , od_gubun
                                    )
        SELECT #{strLoginMemCd}
             , ISNULL(MAX(CRTIDX),0)+1
             , #{strGDCD}
             , #{strGDCNT}
             , GETDATE()
             , #{strCartODTYPE}
        FROM shopping_basket
         WHERE memcd = #{strLoginMemCd}
    </insert>
    
    <select id="prodStockCheck">
        /*prodStockCheck 장바구니에 있는 상품이라면 예약과 신속의 경우 Cart의 수량과 추가되는 수량이 제한 재고량내인지 확인*/
        SELECT m.gdcd
             , ISNULL(c.gdcnt,99999) gdcnt
        FROM gd_master m
          LEFT JOIN gd_cnt c
                 ON m.gdcd = c.gdcd
         WHERE m.gdcd = #{strGDCD}
           AND m.useyn = 'Y'
           <![CDATA[
           AND ISNULL(c.gdcnt,99999) >= (#{strCrtCnt} + #{strGDCNT})
           ]]>
    </select>

    <update id="updateCartProd">
        /* updateCartProd 장바구니 상품 수정(재고량 초과) */
        UPDATE shopping_basket
        SET gdcnt = gdcnt +  #{strGDCNT}
          , indt = GETDATE()
         WHERE memcd = #{strLoginMemCd}
           AND crtidx = #{strCRTIDX}
    </update>

    <select id="modifyCartProdCnt">
       /* modifyCartProdCnt 장바구니 수량 수정 */
        SELECT a.gdcd
             , a.gdcnt
             , a.od_gubun
             , ISNULL(d.gdcnt, 99999) cnt
        FROM shopping_basket a
          JOIN gd_master e 
            ON a.gdcd = e.gdcd
          LEFT OUTER JOIN gd_cnt d 
                       ON a.gdcd = d.gdcd
        WHERE a.memcd = #{strLoginMemCD}
          AND a.crtidx = #{strCRTIDX}
    </select>

    <update id="modifyCartProdUpdate">
        /* modifyCartProdUpdate 장바구니 수량 수정(재고량 초과) */
        UPDATE shopping_basket
        SET gdcnt =  #{strGDCNT}
        WHERE memcd = #{strLoginMemCd}
          AND crtidx = #{strCRTIDX}
    </update>
    
    <delete id="deleteProd">
        /*deleteProdFromCart 장바구니에서 상품 제외*/
        DELETE FROM shopping_basket 
                WHERE memcd = #{strLoginMemCd}
                  AND crtidx = #{strCRTIDX}
    </delete>

    <delete id="deleteProdFromCart">
        /*deleteProdFromCart 장바구니에서 상품 제외*/
        DELETE FROM od_cart 
                WHERE memcd = #{strLoginMemCd} 
                  AND crtidx = #{strCRTIDX}
    </delete>

    <delete id="deleteManyProd">
        /* deleteManyProdFromCart장바구니에서 선택한 상품 제외*/
        DELETE FROM shopping_basket
        WHERE memcd = #{strLoginMemCd}
          AND crtidx = #{strCRTIDX}
         <foreach collection="arrCrtIdx" item="arrCrtIdx">
          AND #{arrCrtIdx}
         </foreach>
    </delete>

    <delete id="deleteManyProdFromCart">
        /* deleteManyProdFromCart장바구니에서 선택한 상품 제외*/
        DELETE FROM od_cart
        WHERE memcd = #{strLoginMemCd}
        <foreach collection="arrCrtIdx" item="arrCrtIdx">
            AND #{arrCrtIdx}
        </foreach>
    </delete>

    <delete id="deleteAllProd">
        /*deleteAllProd 장바구니 전부 비움 */
        DELETE FROM shopping_basket
                WHERE memcd = #{strLoginMemCd}
    </delete>

    <delete id="deleteAllCartProd">
        /*deleteAllCartProd 장바구니 전부 비움 */
        DELETE FROM od_cart
                WHERE memcd = #{strLoginMemCd}
    </delete>

    <select id="returnInfoFromCart">
        /*returnInfoFromCart 장바구니에 담긴 정보 반환 */
        SELECT ISNULL(COUNT(*), 0) AS totalcnt
             , ISNULL(SUM(CASE WHEN t2.qtysaleyn='Y' THEN dbo.getQtySalePrice(t.gdcd, t.gdcnt, dbo.getProductPrice(#{strMemGrpCd},#{strGroupSalePolicy},t.gdcd))
                               ELSE dbo.getProductPrice(#{strMemGrpCd},#{strGroupSalePolicy},t.gdcd)
                          END * ISNULL(t6.weekcnt, 1) * t.gdcnt), 0) totalprice
        FROM shopping_basket t
          JOIN gd_master t2
            ON t2.gdcd = t.gdcd
          LEFT JOIN gd_pack t6
                 ON t6.gdcd = t2.gdcd
         WHERE T.memcd = #{strLoginMemCd}
    </select>
</mapper>