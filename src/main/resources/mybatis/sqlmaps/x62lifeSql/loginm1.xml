<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loginm1">
<!--    '프로젝트: 자연이랑 모바일 웹
    '프로그램: 로그인 화면
   
    '20130311 hwkim 처음작성
    '20140507 hwkim user_agent 추가 / 로그인 시
    '20150217 hwkim 로그인 시 카트 정리 추가 freeze 정보
    '20150423 hwkim 무한루프 방지 처리
    '20151019 sykim 휴직상태시 안내페이지 이동기능 추가.
    '20160909 sykim 휴직자도 로그인을 가능하게 변경, 단, 지원금과 급여공제는 금지.
    '20170308 hwkim shopping_basket 운영방식으로 변경
    '20180719 hwkim 자동로그인 정보 암호화(AES256) 적용
    '20190104 hwkim 자동로그인 시 fcm 파라미터 유지 처리 강화 적용.
    '20190916 sykim 로그인시 SHA함수 변경(dbo.UBHASHFunc 대신 HASHBYTES('SHA2_256'.. 함수 사용).-->
    <select id="loginProcess">
        /* loginProcess 로그인 정보 get*/
        SELECT a.memcd
             , a.memid
             , a.memname
             , a.memstcd 
             , CASE WHEN mempw_hash = CONVERT(VARCHAR(1000), HASHBYTES('SHA2_256',#{strPassword}),2) Then 'Y' 
                    ELSE 'N' 
               END passyn 
             , b.nickn
             , b.idurl
             , ISNULL(b.memlevel,'0') memlevel
             , b.jobtype 
             , b.jobname
             , CASE WHEN ISNULL(b.isblogger,'')='' THEN 'N' 
                    ELSE 'Y' 
               END isblogger 
             , ISNULL(c.islocked,0) islocked, ISNULL(login_failed_count,0) login_failed_count 
        FROM mb_master a 
          LEFT JOIN memberprofile b 
                 ON a.memid = b.memid 
          LEFT JOIN logininfo c 
                 ON a.memcd = c.memcd 
         WHERE a.memstcd NOT IN (#{MEMST_OUT}) 
           AND a.memid = #{strUserId} 
    </select>
    
    <update id="savePasswordFailCnt">
        /*savePasswordFailCnt 비밀번호 입력 실패 횟수 저장  */
        UPDATE logininfo 
           SET login_failed_count = ISNULL(login_failed_count,0) + 1 
             , islocked = #{lockAccount}
         WHERE memcd = #{strRSMEMCD}
    </update>
    
    <delete id="deleteOdCart">
         /* deleteOdCart */
        DELETE FROM od_cart 
                WHERE memcd = #{strRSMEMCD}
    </delete>
    
    <delete id="deleteAfterSevenDays">
         /* deleteAfterSevenDays 담은지 7일이 넘었거나 판매중지인 상품 정리*/
        DELETE FROM shopping_basket 
                WHERE memcd = #{strRSMEMCD}
                  <![CDATA[
                  AND od_gubun <> '12'
                  ]]>
                  AND gdcd IN (SELECT c.gdcd 
                               FROM shopping_basket c
                                 JOIN gd_master g
                                   ON g.gdcd = c.gdcd
                                WHERE memcd = #{strRSMEMCD}
                                  AND (DATEDIFF(d,c.indt,GETDATE()) > 7 OR g.useyn = 'N') 
                              )
    </delete>

    <delete id="deleteReserveProdStopSelling">
        /* deleteReserveProdStopSelling 담은 예약주문 중, 현재 판매하지 않는 상품 정리*/
        DELETE FROM shopping_basket 
                WHERE memcd = #{strRSMEMCD}
                  AND od_gubun = '12'
                  AND gdcd NOT IN ( SELECT gdcd
                                    FROM od_reservegoods
                                     <![CDATA[
                                     WHERE DATEDIFF(d,od_from,GETDATE()) >= 0
                                       AND DATEDIFF(d,GETDATE(),od_to) >= 0
                                     ]]>
                                       AND useyn = 'Y' )
    </delete>
    
    <update id="unlockCartProd">
        /* unlockCartProd 잠겨 있는 장바구니 상품을 해제*/
        UPDATE shopping_basket
           SET freeze = '0'
         WHERE memcd = #{strRSMEMCD}
           AND freeze = '1'
    </update>
    
    <update id="saveExistMemberLoginInfo">
        /*saveExistMemberLoginInfo 로그인 정보가 있을 경우 업데이트 */
        UPDATE logininfo 
           SET last_login = GETDATE() 
             , islogin = 1
             , login_count = login_count + 1
             , login_failed_count = 0
             , islocked = 0
         WHERE memcd = #{strRSMEMCD}
    </update>
    
    <insert id="saveNotExistLoginInfo">
        /*saveNotExistLoginInfo 로그인 정보가 없을 경우 저장*/
        INSERT INTO logininfo(
                               memcd
                             , last_login
                             , last_logout
                             , islogin
                             , login_count
                             , login_failed_count
                             , islocked
                             )
               VALUES(
                       #{strRSMEMCD}
                     , GETDATE()
                     , ''
                     , 1
                     , 1
                     , 0
                     , 0
                     )
    </insert>

    <insert id="saveLoginHistory">
        /* 로그인 History 테이블 저장 */
        INSERT INTO logininfo2(
                                memcd
                              , ipx
                              , refererx
                              , device
                              , user_agent
                              ) 
               VALUES (
                        #{strRSMEMCD}
                      , #{ipx}
                      , #{refererx}
                      , 'M'
                      , #{user_agent}
                      )
    </insert>

    <select id="checkTwalkAccountInfo">
       /* checkTwalkAccountInfo 외부 연계접속(T-walk 체크*/
        SELECT COUNT(1) RCNT
        FROM TWALK_MEMBER
         WHERE tw_memcd = #{strRSMEMCD}
           AND tw_pid = #{pid}
    </select>
    
    <insert id="saveTwalkAccountInfo">
        /*  saveTwalkAccountInfo 외부 연계접속(T-walk)이 있을 경우 연동정보 등록*/
        INSERT INTO TWALK_MEMBER(
                                  tw_memcd
                                , tw_pid
                                , tw_indt
                                ) 
               VALUES (
                        #{strRSMEMCD}
                      , #{pid}
                      , getdate()
                      )
    </insert>

    <select id="loginPointAutoGrant">
        /* loginPointAutoGrant 로그인 포인트 자동 부여*/
        SELECT TOP 1 idx
             , ISNULL(points,0) points
             , memo
        FROM book_accpoint
         WHERE used = 'N'
           AND memcd = #{strRSMEMCD}
           <![CDATA[
           AND ISNULL(apydt,getdate()) >= CONVERT(VARCHAR,GETDATE(),23)
           ]]>
        ORDER BY apydt DESC
    </select>

    <update id="pointGrantWithAuthority">
        /* pointGrantWithAuthority 포인트 권한적립*/
        UPDATE book_accpoint 
           SET used = 'Y'
             , usedt = getdate()
         WHERE idx = #{rsIdx}
    </update>
</mapper>